type Profile @entity {
  id: ID!
  profileId: BigInt!
  creator: Bytes! # address

  followNFTURI: String! # string
}

type SocialGraph @entity {
  id: ID! # address
  following: [Profile!]!
}

type FollowApproved @entity {
    id: ID!

    addresses: [Profile!]!

}

type Mirror @entity {
  id: ID! # txn
  profileId: BigInt!
  pubId: BigInt!
  profileIdPointed: BigInt!
  pubIdPointed: BigInt!
  referenceModule: Bytes!
  referenceModuleReturnData: Bytes!
  timestamp: BigInt!
}

type FollowNftTransferred @entity {
  id: ID!
  profileId: BigInt!
  followNFTID: BigInt!
  from: String!
  to: String!
  timestamp: BigInt!
  data: String!
}

type HandleGovernanceSet @entity {
    id: ID!
    prevGovernance: String!
    newGovernance: String!
    timestamp: BigInt!
}

type HandleModuleBaseConstructed @entity {
    id: ID!
    timestamp: BigInt!
    hub: Bytes!
}

type HandleModuleGlobalsCurrencyWhitelisted @entity {
    id: ID!
    currency: ID!
    prevWhitelisted: Boolean!
    whitelisted: Boolean!
}

type HandleModuleGlobalsGovernanceSet @entity {
    id: ID!
    prevGovernance: String!
    newGovernance: String!
}

